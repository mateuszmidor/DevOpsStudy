# Default values for mychart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


replicaCount: 1

image:
  repository: tutum/hello-world
  version: # tutum/hello-world has no single version tag
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: "MY-CHART"
fullnameOverride: "my-chart" 

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 80
  targetPort: 80
  metadata:
    name: mychart-service

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: mychart.127.0.0.1.nip.io
      paths: [/]
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  # spec:
  #   rules:
  #     - host: hello-world.127.0.0.1.nip.io
  #       http:
  #         paths:
  #           - backend:
  #               serviceName: mychart-service
  #               servicePort: 80
  #             path: /

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
